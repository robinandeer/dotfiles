" vim-sublime - A minimal Sublime Text -like vim experience bundle
"               http://github.com/grigio/vim-sublime
" Best view with a 256 color terminal and Powerline fonts
" On first run of a new machine:
" 0. run: "git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle"
" 1. open VIM and type ":BundleInstall" <ENTER>
" 2. wait for packages to install
" 3. quit and restart VIM - your done!

set nocompatible                    " essential, use Vim settings (not Vi)
filetype off                        " required for Vundle
set rtp+=~/.vim/bundle/vundle/      " set runtime path to include Vundle
call vundle#rc()

" Let Vundle manange Vundle, required
Bundle 'gmarik/vundle'

" Keep bundle commands here
Bundle 'tpope/vim-surround'
Bundle 'gcmt/breeze.vim'
Bundle 'kien/ctrlp.vim'
Bundle 'SirVer/ultisnips'
Bundle 'tomtom/tcomment_vim'
Bundle 'bling/vim-airline'
Bundle 'airblade/vim-gitgutter'

" Color Themes
Bundle 'flazz/vim-colorschemes'
set background=dark
colorscheme solarized

""""""""
if has('autocmd')
  filetype plugin indent on
endif
if has('syntax') && !exists('g:syntax_on')
  syntax enable
endif

if !has('gui_running')
  set t_Co=256
endif

" +--- General. --------------------------------------------------------------+
set history=1000           " lots of command line history
set autoread               " reload files (no local changes only)
set clipboard=unnamed      " Use the OS clipboard by default

" +--- Highlight Trailing Whitespace. ----------------------------------------+
set list listchars=trail:.,tab:>.
highlight SpecialKey ctermfg=DarkGray ctermbg=Black

" +--- Encoding anyone? ------------------------------------------------------+
set termencoding=utf-8     " we like utf-8
set encoding=utf-8

" +--- Visual Cues -----------------------------------------------------------+
set showmatch              " brackets/braces that is
set laststatus=2           " always show the status line
set ignorecase smartcase   " ignore case when searching
set cursorline             " highlight current line

" +--- Text Formatting -------------------------------------------------------+
set autoindent             " automatic indent new lines
set smartindent            " be smart about it
set nowrap                 " do not wrap lines
set softtabstop=2          " yep, two
set shiftwidth=2           " ..
set tabstop=2
set expandtab              " expand tabs to spaces
set nosmarttab             " fuck tabs

" Use :help 'option' to see the documentation for the given option.
set backspace=indent,eol,start
set complete-=i
set showmode

set nrformats-=octal
set shiftround

set ttimeout
set ttimeoutlen=50

set incsearch              " do incremental searching
" Use <C-L> to clear the highlighting of :set hlsearch.
if maparg('<C-L>', 'n') ==# ''
  nnoremap <silent> <C-L> :nohlsearch<CR><C-L>
endif

" +--- UI. -------------------------------------------------------------------+
set ruler                  " show the cursor position all the time
set number                 " line numbers
set nostartofline          " don't jump to the start of line when scrolling
set esckeys                " Allow cursor keys in insert mode
set shortmess=atI          " Don’t show the intro message when starting Vim

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

set showcmd                " display incomplete commands
set wildmenu               " Enhance command-line completion

inoremap <C-U> <C-G>u<C-U>

set hlsearch

" Don't use Ex mode, use Q for formatting
map Q gq

" do not history when leavy buffer
set hidden

" FIXME: (broken) ctrl s to save
noremap  <C-S> :update<CR>
vnoremap <C-S> <C-C>:update<CR>
inoremap <C-S> <Esc>:update<CR>

" +--- Backups. --------------------------------------------------------------+
set nobackup                           " do not keep backups after close
set nowritebackup                      " do not keep a backup while working
set noswapfile                         " don't keep swp files either
set backupdir=$HOME/.vim/backup        " store backups under ~/.vim/backup
set backupcopy=yes                     " keep attributes of original file
set backupskip=/tmp/*,$TMPDIR/*,$TMP/*,$TEMP/*
set directory=~/.vim/swap,~/tmp,.      " keep swp files under ~/.vim/swap

set fileformats=unix,dos,mac

" exit insert mode 
inoremap <C-c> <Esc>

set completeopt=menuone,longest,preview

" +--- Plugins config. -------------------------------------------------------+
" ctrlP
set wildignore+=*/.git/*,*/.hg/*,*/.svn/* 

" ultisnip
" NOTE: <f1> otherwise it overrides <tab> forever
let g:UltiSnipsExpandTrigger="<f1>"
let g:UltiSnipsJumpForwardTrigger="<f1>"
let g:UltiSnipsJumpBackwardTrigger="<c-k>"
let g:did_UltiSnips_vim_after = 1

" vim-airline
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

"
" Basic shortcuts definitions
"  most in visual mode / selection (v or ⇧ v)
"

" Find
map <C-f> /
" indend / deindent after selecting the text with (⇧ v), (.) to repeat.
vnoremap <Tab> >
vnoremap <S-Tab> <
" comment / decomment & normal comment behavior
vmap <C-m> gc
" Disable tComment to escape some entities
let g:tcomment#replacements_xml={}
" Text wrap simpler, then type the open tag or ',"
vmap <C-w> S
" Cut, Paste, Copy
vmap <C-x> d
vmap <C-v> p
vmap <C-c> y
" Undo, Redo (broken)
nnoremap <C-z>  :undo<CR>
inoremap <C-z>  <Esc>:undo<CR>
nnoremap <C-y>  :redo<CR>
inoremap <C-y>  <Esc>:redo<CR>
" Tabs
let g:airline_theme='badwolf'
let g:airline#extensions#tabline#enabled = 1
nnoremap <C-b>  :tabprevious<CR>
inoremap <C-b>  <Esc>:tabprevious<CR>i
nnoremap <C-n>  :tabnext<CR>
inoremap <C-n>  <Esc>:tabnext<CR>i
nnoremap <C-t>  :tabnew<CR>
inoremap <C-t>  <Esc>:tabnew<CR>i
nnoremap <C-k>  :tabclose<CR>
inoremap <C-k>  <Esc>:tabclose<CR>i

" lazy ':'
map \ :

let mapleader = ','
nnoremap <Leader>p :set paste<CR>
nnoremap <Leader>o :set nopaste<CR>
noremap  <Leader>g :GitGutterToggle<CR>

" this machine config
if filereadable(expand("~/.vimrc.local"))
  source ~/.vimrc.local
endif
